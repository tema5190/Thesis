==================
Вступление и приветствие
==================

Доброго дня увОжаемые члены комиссии
Меня зовут Дерид Артем Александрович
Тема моего дипломного проекта - библиотека для межсетевого связывания микросервисов для платформы .net core

=====================
Описание проблемы и постановка цели
=====================

Проблема обновления ПО крупных предприятий стоит очень остро в наше время.
Это связано с тем что такие системы сложны, 
зачастую они требуют повышенные требования к отказоустойчивости,
безопасности и большим нагрузкам.

Законченная структура таких систем зачастую сложна и её тяжело расширять. 
Разработка моего продукта призвана решить проблемы расширения и обновлению готовой кодовой базы и инфраструктуры
которая построена с помощью платформы .Net и технологий компании microsoft.

====
Описание алгоритма библиотеки и плакатов:
====

Моя библиотека создавалась как возможное решение проблемы коммуникации систем крупных компаний, одни части которых находятся
в публичном доступе, а другие скрыты во внутренней сети скрытой межсетевым экраном или находятся в демилиторизованной зоне.

+++(плакат Сетевое устройство системы после внедрения продукта)
На данной иллюстрации вы можете наблюдать условное устройство сети после внедрения моего программного продукта.
Обновлённое программное обеспечения позволит мне создать ещё один безопасный и гибкий канал связи для обеспечения доступа к внутренним
сервисам компании, обработки ими запроса и возвращению результата отправителю.
Используя статический анализ кода, генерирацию код и динамических сбороки в памяти
я реализовал основные модули моей системы, 
а именно анализатор типов, шину канала связи и инструменты связывания которые
позволяют создавать слепок любого сервиса, для программиста-клиента внешне идентичного внутреннему.

Анализатор типов позволяет автоматически создавать классы декораторы над любыми существующими сервисами.
Используя их система создаёт объекты близнецы, которые взаимодействуют друг с другом посредством
специальных протоколов передачи сообщений и имеют поведение, которое позволяет обращаться с ними как с экземпляром
одного типа, с идентичными полями, методами, событиями и их содержимым.

+++++++  (Слайд Алгоритм работы анализатора типов).
На данном слайде можно наблюдать алгоритм работы анализатора типов. 
Анализатор изучает все используемые сборки и библиотеки,
события класса и типы их делегатов,
удаляет все закрытые или служебные методы класса сервиса,
получает интерфейсы методов и типы возвращаемых значений
и создаёт специальный тип, содержащий все необходимые методанные для дальнейшей работы.

Сетевое взаимодействие между этими экземплярами происходит посредством другого важнейшего узла системы, а 
именно шины соединения с сервером сообщений RabbitMQ. 
Данный компонент обеспечивает связь экземпляров, а именно
обеспечивает синхронизацию всех полей и свойств объектов. Обеспечивает работу методов, создаёт
и поддерживает подписку на события в этих экземплярах. 
Так же модуль отвечает за проверку соединения экземпляров, маршрутизацию сообщений,
способен восстановить соединение при сбое без потери данных переданных
и имеет механизмы защиты при сильных нагрузках.

+++++++ (Чертёж 1)
На данной иллюстрации мы можем наблюдать алгоритм подключения
обоих частей сервиса такие как подключение к серверу RabbitMQ, создание декораторов
во внутренней и публичной части сервисов, их запуск, подключение к шине и соединения.

+++++++ (Чертёж 2)

На следующем слайде изображён алгоритм отправки сообщений между частями сервиса после начальной
инициализации. Данный алгоритм является бесконечным циклом, который работает всё время 
жизни программы и отслеживает изменения полей и свойств, вызовы методов и обеспечивает
доставку сообщений о событиях.

===========================
-- Описание возможных проблем при разработке 
==========================

+++++ (Плакат устройство тестового стенда)

Надёжности системы так же было уделено должное внимание. Почти весь этап разработки первой версии продукта мы имели надёжные
тесты на устойчивость в исключительных ситуациях, модульные тесты, интеграционные тесты а так же тесты производительности.
На данном слайде изображено устройство тестового стенда специально сконструированном для этих целей.
Он призван используя аппаратные и программные средства, моделировать работу реальных целевых систем для интеграции в некотором масштабе.

===================================
ЭКОНОМИКА И ОПИСАНИЕ ВНЕДРЕНИЯ
===================================

++ (Слайд следующие этапы разработки и внедрения системы)
Этап разработки и тестирования данной версии со стороны нашей компании завершён полностью.
Хорошим показателем качества и востребованности моей библиотеки я считаю тот факт что к концу лета 2018 года
мы планируем закончить поставку и внедрение её для крупного предприятия в западной европе и
имеем планы по дальнейшей разработки, модернизации, оптимизации и внедрению в других компаниях.

==================================
ВЫВОДЫ И ПРОЩАНИЕ
==================================

Резюмируя всё вышесказанное можно считать что все
поставленные задачи моего проекта выполнены, продукт является конкурентоспособным
и уже востребован на крупных предприятиях.
Спасибо за внимания, я готов ответить на любые интересующие вас вопросы.